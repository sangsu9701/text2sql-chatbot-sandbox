# version: '3.8'

services:
  # PostgreSQL 데이터베이스
  postgres:
    image: postgres:15
    container_name: akeon-t-postgres
    environment:
      POSTGRES_DB: snop_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./database/sample_data.sql:/docker-entrypoint-initdb.d/02-sample_data.sql
    networks:
      - akeon-network

  # Redis 캐시
  redis:
    image: redis:7-alpine
    container_name: akeon-t-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - akeon-network

  # FastAPI 백엔드
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: akeon-t-backend
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:password@postgres:5432/snop_db
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DEBUG=true
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
    networks:
      - akeon-network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Next.js 프론트엔드
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: akeon-t-frontend
    environment:
      - BACKEND_URL=http://backend:8000
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - akeon-network
    command: npm run dev

volumes:
  postgres_data:
  redis_data:

networks:
  akeon-network:
    driver: bridge
